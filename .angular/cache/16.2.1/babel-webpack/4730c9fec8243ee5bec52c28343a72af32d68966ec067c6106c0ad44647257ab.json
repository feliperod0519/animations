{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { trigger, state, style, transition, animate, keyframes, group } from '@angular/animations';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.state = 'normal';\n    this.wildState = 'normal';\n    this.list = ['Milk', 'Sugar', 'Bread'];\n  }\n  onAdd(item) {\n    this.list.push(item);\n  }\n  onAnimate() {\n    this.state === 'normal' ? this.state = 'highlighted' : this.state = 'normal';\n    this.wildState === 'normal' ? this.wildState = 'highlighted' : this.wildState = 'normal';\n  }\n  onShrink() {\n    this.wildState = 'shrunken';\n  }\n  onDelete(item) {\n    console.log(item);\n    this.list.splice(this.list.indexOf(item), 1);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  animations: [trigger('divState', [state('normal', style({\n    'background-color': 'red',\n    transform: 'translateX(0)'\n  })), state('highlighted', style({\n    'background-color': 'blue',\n    transform: 'translateX(100px)'\n  })), transition('normal <=> highlighted', animate(300))\n  //transition('highlighted => normal', animate(800))\n  ]), trigger('wildState', [state('normal', style({\n    'background-color': 'red',\n    transform: 'translateX(0) scale(1)'\n  })), state('highlighted', style({\n    'background-color': 'blue',\n    transform: 'translateX(100px) scale(1)'\n  })), state('shrunken', style({\n    'background-color': 'green',\n    transform: 'translateX(0px) scale(0.5)'\n  })), transition('normal => highlighted', animate(300)), transition('highlighted => normal', animate(800)), transition('shrunken <=> *', [style({\n    'background-color': 'orange'\n  }), animate(1000, style({\n    borderRadius: '50px'\n  })), animate(500)])]), trigger('list1', [state('in', style({\n    'opacity': 1,\n    transform: 'translateX(0)'\n  })), transition('void => *', [style({\n    opacity: 0,\n    transform: 'translateX(-100px)'\n  }), animate(300)]), transition('* => void', [animate(300, style({\n    transform: 'translateX(100px)',\n    opacity: 0\n  }))])]), trigger('list2', [state('in', style({\n    'opacity': 1,\n    transform: 'translateX(0)'\n  })), transition('void => *', [animate(1000, keyframes([style({\n    transform: 'translateX(-100px)',\n    opacity: 0,\n    offset: 0\n  }), style({\n    transform: 'translateX(-50px)',\n    opacity: 0.5,\n    offset: 0.3\n  }), style({\n    transform: 'translateX(-20px)',\n    opacity: 1,\n    offset: 0.8\n  }), style({\n    transform: 'translateX(0px)',\n    opacity: 1,\n    offset: 1\n  })]))]), transition('* => void', [group([animate(300, style({\n    color: 'red'\n  })), animate(800, style({\n    transform: 'translateX(100px)',\n    opacity: 0\n  }))])])])]\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}